@import "tailwindcss";

/* set a single cycle variable so gradient and pokemons share exact timeline */
:root {
  --cycle: 10s; /* increased from 8s to 12s to slow things down — change this to taste */
}

/* Background gradient animation (uses the same cycle) */
@keyframes gradient {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient var(--cycle) linear infinite;
}

/* Floating Pokeballs — slowed a bit for less frantic motion */
@keyframes float {
  0% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-18px) rotate(18deg); }
  100% { transform: translateY(0px) rotate(0deg); }
}

.pokeball {
  animation: float 6s ease-in-out infinite; /* slower than before */
  opacity: 0.8;
  will-change: transform;
}

/* ------------- Pokémon synced animations -------------
   We use the same cycle (--cycle) and shape the keyframes so each
   pokemon is visible during its color phase:
     - Pikachu: 0%  →  ~33%  (yellow)
     - Charizard: ~33% → ~66%  (red)
     - Blastoise: ~66% → 100%  (blue)
   Adjust the percent stops to fine-tune overlap.
*/

/* Pikachu: appear early in the cycle (yellow phase) */
@keyframes pikachuAnim {
  0% {
    opacity: 0;
    transform: translateX(-160%) translateY(0) scale(1);
  }
  4% {
    opacity: 1;
    transform: translateX(-30%) translateY(-10%) scale(0.95);
  }
  28% {
    opacity: 1;
    transform: translateX(6%) translateY(-60%) scale(0.95);
  }
  30% {
    opacity: 0;
    transform: translateX(50%) translateY(-160%) scale(0.9);
  }
  100% {
    opacity: 0;
    transform: translateX(6%) translateY(-60%) scale(0.9);
  }
}

/* Charizard: middle red phase */
/* @keyframes charizardAnim {
  0%, 32% {
    opacity: 0;
    transform: translateX(-160%) translateY(0) scale(1);
  }
  34% {
    opacity: 1;
    transform: translateX(-20%) translateY(-15%) scale(0.98);
  }
  58% {
    opacity: 1;
    transform: translateX(8%) translateY(-90%) scale(0.98);
  }
  66% {
    opacity: 0;
    transform: translateX(50%) translateY(-180%) scale(0.95);
  }
  100% {
    opacity: 0;
    transform: translateX(50%) translateY(-180%) scale(0.95);
  }
} */

/* Blastoise: blue phase (late) */
@keyframes blastoiseAnim {
 0%, 32% {
    opacity: 0;
    transform: translateX(-160%) translateY(0) scale(1);
  }
  34% {
    opacity: 1;
    transform: translateX(-20%) translateY(-15%) scale(0.98);
  }
  58% {
    opacity: 1;
    transform: translateX(8%) translateY(-90%) scale(0.98);
  }
  66% {
    opacity: 0;
    transform: translateX(50%) translateY(-180%) scale(0.95);
  }
  100% {
    opacity: 0;
    transform: translateX(50%) translateY(-180%) scale(0.95);
  }
}
@keyframes charizardAnim{
    0%, 32% {
    opacity: 0;
    transform: translateX(-160%) translateY(0) scale(1);
  }
  34% {
    opacity: 1;
    transform: translateX(-10%) translateY(-5%) scale(1);
  }
  38% {
    opacity: 1;
    transform: translateX(0%) translateY(-20%) scale(1);
  }
  
  100% {
    opacity: 0;
    transform: translateX(40%) translateY(-80%) scale(0.95);
  }
}

/* Apply animations — use the same cycle so they stay in sync */
.pikachu {
  animation: pikachuAnim var(--cycle) linear infinite;
  animation-fill-mode: both;
  will-change: transform, opacity;
}

.charizard {
  animation: charizardAnim var(--cycle) linear infinite;
  animation-fill-mode: both;
  will-change: transform, opacity;
}

.blastoise {
  animation: blastoiseAnim var(--cycle) linear infinite;
  animation-fill-mode: both;
  will-change: transform, opacity;
}
